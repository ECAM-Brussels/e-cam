generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Assignment {
  url String @id
  title String @default("")
  description String @default("")
  /// [ExerciseList]
  body Json
  /// [Options]
  options Json
  hash String @default("")
  lastModified DateTime @default(now())

  submissions Submission[]
  courses Course[]
  prerequisites Assignment[] @relation("Prerequisites")
  requiredBy Assignment[] @relation("Prerequisites")
}

model Course {
  code String @id
  title String @default("")
  image String?
  url String @default("")

  assignments Assignment[]
}

model Submission {
  url String
  email String
  /// [ExerciseList]
  body Json
  grade Int @default(0)
  lastModified DateTime @default(now())
  @@id([url, email])

  assignment Assignment @relation(fields: [url], references: [url])
  user User @relation(fields: [email], references: [email])
}

model Exercise {
  hash String @id
  type String
  /// [Question]
  question Json
  score Int @default(1500)
  attempts Attempt[]
}

model User {
  email String @id
  admin Boolean @default(false)
  firstName String
  lastName String
  score Int @default(1500)

  submissions Submission[]
  attempts Attempt[]
  boards Board[]
}

model Attempt {
  id String @id @default(uuid())
  email String
  hash String
  userElo Int
  exerciseElo Int
  gain Int
  date DateTime @default(now())

  user User @relation(fields: [email], references: [email])
  exercise Exercise @relation(fields: [hash], references: [hash])
}

model Board {
  url String
  id String
  userEmail String
  lastModified DateTime @default(now())

  author User @relation(fields: [userEmail], references: [email])
  strokes Stroke[]
  @@id([url, id])
}

model Stroke {
  id String @id @default(uuid())
  boardUrl String
  boardId String
  color String
  lineWidth Int
  /// [PointList]
  points Json
  created DateTime @default(now())

  board Board @relation(fields: [boardUrl, boardId], references: [url, id])
}
